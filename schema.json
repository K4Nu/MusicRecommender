{
    "openapi": "3.0.3",
    "info": {
        "title": "Music Recommender",
        "version": "1.0.0",
        "description": "Lorem ipsum"
    },
    "paths": {
        "/auth/login/": {
            "post": {
                "operationId": "auth_login_create",
                "description": "Check the credentials and return the REST Token\nif the credentials are valid and authenticated.\nCalls Django Auth login method to register User ID\nin Django session framework\n\nAccept the following POST parameters: username, password\nReturn the REST Framework Token Object's key.",
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomLogin"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomLogin"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomLogin"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtHeaderAuth": []
                    },
                    {
                        "jwtCookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JWT"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/auth/logout/": {
            "post": {
                "operationId": "auth_logout_create",
                "description": "Calls Django logout method and delete the Token object\nassigned to the current User object.\n\nAccepts/Returns nothing.",
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "jwtHeaderAuth": []
                    },
                    {
                        "jwtCookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RestAuthDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/auth/password/change/": {
            "post": {
                "operationId": "auth_password_change_create",
                "description": "Calls Django Auth SetPasswordForm save method.\n\nAccepts the following POST parameters: new_password1, new_password2\nReturns the success/fail message.",
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordChange"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordChange"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordChange"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtHeaderAuth": []
                    },
                    {
                        "jwtCookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RestAuthDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/auth/password/reset/": {
            "post": {
                "operationId": "auth_password_reset_create",
                "description": "Calls Django Auth PasswordResetForm save method.\n\nAccepts the following POST parameters: email\nReturns the success/fail message.",
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordReset"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordReset"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordReset"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtHeaderAuth": []
                    },
                    {
                        "jwtCookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RestAuthDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/auth/password/reset/confirm/": {
            "post": {
                "operationId": "auth_password_reset_confirm_create",
                "description": "Password reset e-mail link is confirmed, therefore\nthis resets the user's password.\n\nAccepts the following POST parameters: token, uid,\n    new_password1, new_password2\nReturns the success/fail message.",
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordResetConfirm"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordResetConfirm"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordResetConfirm"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtHeaderAuth": []
                    },
                    {
                        "jwtCookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RestAuthDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/auth/registration/": {
            "post": {
                "operationId": "auth_registration_create",
                "description": "Registers a new user.\n\nAccepts the following POST parameters: username, email, password1, password2.",
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomRegister"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomRegister"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CustomRegister"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtHeaderAuth": []
                    },
                    {
                        "jwtCookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RestAuthDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/auth/registration/resend-email/": {
            "post": {
                "operationId": "auth_registration_resend_email_create",
                "description": "Resends another email to an unverified email.\n\nAccepts the following POST parameter: email.",
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResendEmailVerification"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ResendEmailVerification"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ResendEmailVerification"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtHeaderAuth": []
                    },
                    {
                        "jwtCookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RestAuthDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/auth/registration/verify-email/": {
            "post": {
                "operationId": "auth_registration_verify_email_create",
                "description": "Verifies the email associated with the provided key.\n\nAccepts the following POST parameter: key.",
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyEmail"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyEmail"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyEmail"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtHeaderAuth": []
                    },
                    {
                        "jwtCookieAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RestAuthDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/auth/token/refresh/": {
            "post": {
                "operationId": "auth_token_refresh_create",
                "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenRefresh"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/auth/token/verify/": {
            "post": {
                "operationId": "auth_token_verify_create",
                "description": "Takes a token and indicates if it is valid.  This view provides no\ninformation about a token's fitness for a particular use.",
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenVerify"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenVerify"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenVerify"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenVerify"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/auth/user/": {
            "get": {
                "operationId": "auth_user_retrieve",
                "description": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.\n\nDefault accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.",
                "tags": [
                    "auth"
                ],
                "security": [
                    {
                        "jwtHeaderAuth": []
                    },
                    {
                        "jwtCookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDetails"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "auth_user_update",
                "description": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.\n\nDefault accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.",
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserDetails"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserDetails"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserDetails"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtHeaderAuth": []
                    },
                    {
                        "jwtCookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDetails"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "auth_user_partial_update",
                "description": "Reads and updates UserModel fields\nAccepts GET, PUT, PATCH methods.\n\nDefault accepted fields: username, first_name, last_name\nDefault display fields: pk, username, email, first_name, last_name\nRead-only fields: pk, email\n\nReturns UserModel fields.",
                "tags": [
                    "auth"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserDetails"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserDetails"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserDetails"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtHeaderAuth": []
                    },
                    {
                        "jwtCookieAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDetails"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "CustomLogin": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "password"
                ]
            },
            "CustomRegister": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password1": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "password2": {
                        "type": "string",
                        "writeOnly": true
                    }
                },
                "required": [
                    "email",
                    "password1",
                    "password2"
                ]
            },
            "JWT": {
                "type": "object",
                "description": "Serializer for JWT authentication.",
                "properties": {
                    "access": {
                        "type": "string"
                    },
                    "refresh": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserDetails"
                    }
                },
                "required": [
                    "access",
                    "refresh",
                    "user"
                ]
            },
            "PasswordChange": {
                "type": "object",
                "properties": {
                    "new_password1": {
                        "type": "string",
                        "maxLength": 128
                    },
                    "new_password2": {
                        "type": "string",
                        "maxLength": 128
                    }
                },
                "required": [
                    "new_password1",
                    "new_password2"
                ]
            },
            "PasswordReset": {
                "type": "object",
                "description": "Serializer for requesting a password reset e-mail.",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    }
                },
                "required": [
                    "email"
                ]
            },
            "PasswordResetConfirm": {
                "type": "object",
                "description": "Serializer for confirming a password reset attempt.",
                "properties": {
                    "new_password1": {
                        "type": "string",
                        "maxLength": 128
                    },
                    "new_password2": {
                        "type": "string",
                        "maxLength": 128
                    },
                    "uid": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    }
                },
                "required": [
                    "new_password1",
                    "new_password2",
                    "token",
                    "uid"
                ]
            },
            "PatchedUserDetails": {
                "type": "object",
                "description": "User model w/o password",
                "properties": {
                    "pk": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "ID"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true
                    }
                }
            },
            "ResendEmailVerification": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    }
                },
                "required": [
                    "email"
                ]
            },
            "RestAuthDetail": {
                "type": "object",
                "properties": {
                    "detail": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "detail"
                ]
            },
            "TokenRefresh": {
                "type": "object",
                "properties": {
                    "access": {
                        "type": "string",
                        "readOnly": true
                    },
                    "refresh": {
                        "type": "string",
                        "writeOnly": true
                    }
                },
                "required": [
                    "access",
                    "refresh"
                ]
            },
            "TokenVerify": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "writeOnly": true
                    }
                },
                "required": [
                    "token"
                ]
            },
            "UserDetails": {
                "type": "object",
                "description": "User model w/o password",
                "properties": {
                    "pk": {
                        "type": "integer",
                        "readOnly": true,
                        "title": "ID"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true
                    }
                },
                "required": [
                    "email",
                    "pk"
                ]
            },
            "VerifyEmail": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string",
                        "writeOnly": true
                    }
                },
                "required": [
                    "key"
                ]
            }
        },
        "securitySchemes": {
            "jwtCookieAuth": {
                "type": "apiKey",
                "in": "cookie",
                "name": "auth"
            },
            "jwtHeaderAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}